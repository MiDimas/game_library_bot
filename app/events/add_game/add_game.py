from telegram.ext import ContextTypes
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup

from app.helpers.decorators.event_error_handler import async_event_error_handler
from app.events.menu.states import MenuStates
from app.repositories.user_repo import UserRepo
from app.repositories.game_repo import GameRepo
from app.helpers.checks import check_subscription
from app.config.main_conf import settings
from app.helpers.exceptions.game_exceptions import GameAlreadyExistsError

keyboard_cancel = [
    [InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="menu")]
]
reply_markup_cancel = InlineKeyboardMarkup(keyboard_cancel)

keyboard_in_menu = [
    [InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é", callback_data="menu")]
]
reply_markup_in_menu = InlineKeyboardMarkup(keyboard_in_menu)

@async_event_error_handler      
async def start_add_game(update: Update, context: ContextTypes.DEFAULT_TYPE):
    '''–ù–∞—á–∞–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä—ã'''

    print(update)
    await update.callback_query.answer()
    if not await check_subscription(context, settings.CHANNEL_ID, update.effective_user.id):
        await update.callback_query.message.edit_text('–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. \n\n'
                                                       f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª {settings.CHANNEL_ID} –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
        return MenuStates.MENU
    
    user = await UserRepo.get_full_user_by_telegram_id(update.effective_user.id)
    if not user:
        await update.callback_query.message.edit_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')
        return MenuStates.UNDEFINED
    
    context.user_data['user_id'] = user.id

    
    count_games_added_today = await GameRepo.count_games_added_today(user.id) 

    if settings.MAX_GAMES_PER_DAY and count_games_added_today >= settings.MAX_GAMES_PER_DAY:
        await update.callback_query.message.edit_text('–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –¥–µ–Ω—å. \n\n'\
                                        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É –∑–∞–≤—Ç—Ä–∞.', reply_markup=reply_markup_in_menu)
        return MenuStates.MENU


    await update.callback_query.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã, –Ω–∏–∑–∫—É—é —Ü–µ–Ω—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–¥–µ—Ç–µ. \n\n'
                                                   '–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞" —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 
                                                   reply_markup=reply_markup_cancel)

    return MenuStates.ADD_GAME

async def add_game(update: Update, context: ContextTypes.DEFAULT_TYPE):
    '''–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥—Ä—ã'''
    
    game_name = update.message.text.strip()
    if len(game_name) < 3 or len(game_name) > 300: 
        await update.message.reply_text('–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 3 –¥–æ 300 —Å–∏–º–≤–æ–ª–æ–≤.', reply_markup=reply_markup_cancel)
        return MenuStates.ADD_GAME
    
    game_name = game_name.lower()

    print(game_name)

    context.user_data['pending_game'] = game_name

    keyboard = [
        [InlineKeyboardButton("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É", callback_data="approve_game")],
        [InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(f'–í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É {game_name} –≤ —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–Ω–∏—è? \n\n'
                                    '–ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É" \n\n'
                                    '–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, –Ω–∞–∂–º–∏—Ç–µ "üö´ –û—Ç–º–µ–Ω–∏—Ç—å" \n\n'
                                    '–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã',
                                    reply_markup=reply_markup
                                    )

    return MenuStates.APPROVE_GAME

async def approve_game(update: Update, context: ContextTypes.DEFAULT_TYPE):
    '''–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä—ã'''
    is_callback = update.callback_query is not None
    message = update.effective_message

    if is_callback:
        await update.callback_query.answer()

    game_name = context.user_data.get('pending_game', '')
    user_id = context.user_data.get('user_id', None)
    if not game_name:
        result = '–ù–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ. \n\n'\
                '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É, –Ω–∞–∂–º–∏—Ç–µ "üéÆ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–≥—Ä—É" \n\n'\
                '–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"'
        if is_callback: await message.edit_text(result, reply_markup=reply_markup_in_menu)
        else: await message.reply_text(result, reply_markup=reply_markup_in_menu)
        return MenuStates.UNDEFINED
    
    if not user_id:
        result = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. \n\n'\
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
        if is_callback: await message.edit_text(result, reply_markup=reply_markup_in_menu)
        else: await message.reply_text(result, reply_markup=reply_markup_in_menu)
        return MenuStates.UNDEFINED
    
    if 'pending_game' in context.user_data:
        del context.user_data['pending_game']
    try:
        game = await GameRepo.add_game(user_id, game_name)
    except GameAlreadyExistsError as e:
        result = str(e)
        if is_callback: await message.edit_text(result, reply_markup=reply_markup_cancel)
        else: await message.reply_text(result, reply_markup=reply_markup_cancel)
        return MenuStates.ADD_GAME

    keyboard = [
        [InlineKeyboardButton("üéÆ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–≥—Ä—É", callback_data="add_game")],
        [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    result = f'–ò–≥—Ä–∞ {game.name} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–Ω–∏—è! \n\n'\
            '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–≥—Ä—É, –Ω–∞–∂–º–∏—Ç–µ "üéÆ –î–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∏–≥—Ä—É" \n\n'\
            '–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"'
    if is_callback: await message.edit_text(result, reply_markup=reply_markup)
    else: await update.message.reply_text(result,reply_markup=reply_markup)

    return MenuStates.MENU