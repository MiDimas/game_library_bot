from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes

from app.helpers.decorators import async_event_error_handler
from app.events.menu.states import MenuStates
from app.repositories.user_repo import UserRepo
@async_event_error_handler
async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    is_callback = bool(update.callback_query)
    message = update.effective_message
    keyboard = [
        [InlineKeyboardButton("üéÆ –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä—É", callback_data="add_game")],
        [InlineKeyboardButton("üîç –ú–æ–∏ –æ–∂–∏–¥–∞–µ–º—ã–µ –∏–≥—Ä—ã", callback_data="check_my_games")]
    ]
    user = await UserRepo.get_user_by_telegram_id(update.effective_user.id)
    if not user: 
        await message.edit_text("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start")
        return MenuStates.UNDEFINED
    if user.is_admin:
        keyboard.append([InlineKeyboardButton("üîç –í—Å–µ –∏–≥—Ä—ã", callback_data="admin_check_games")])
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    if is_callback:
        await update.callback_query.answer()
        await update.callback_query.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
        return MenuStates.MENU

    await message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
    return MenuStates.MENU